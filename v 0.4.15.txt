v 0.55.1

Светлая тема - #FF21CA78
Темная тема - #FF5B4EBB

1) Создание ИЗ ЛЮБОГО СПИСКА - спискок пригодный для бд
		• нахождение через бд по ШК Upper RP 
		• расстановка ","
		• функция поиска родителей/дочек и добавление и кобщему списку
		• добавленре в Б/О
		• вывод "Не найденных и найденных" в поля "списка сравнений"
2) Работа со списками
		• вынос разницы в одно из полей с пометкой о таковом   	
		• вынос совпадающих элементов в одно из полей

3)Добавление/ удаление из партий возврата как в Шипторе, так и на складе
		• выбор из списка адресов склада (Шарапово - id - DB)
		[Партии]
		//---------------------------------------
			•Удаление:
				1 - проверка существования в шиптор ;
							select * from package_return pr where id in (53114);

				2 - Убрать из партии возврата в Шиптор:

								UPDATE public.package
									SET return_id = NULL
									WHERE id in (Список RP, без RP);

				3 - Проверка существования партии в заппе (нужного склада) ~Проверка статуса партии в Запп~
						select * from package_return pr where return_fid in(53114);

				4 - Удаление из партии 
						delete from package_return_item
										where package_id in (select id from package p where package_fid in(Список RP));		

			•Добавление: 
				1 - проверка существования в шиптор 
						select * from package_return pr where id in (53114);

				2 - Подтверждение склада (по stock_id)
						SELECT id, "name"  FROM public.warehouse where id = 23;

				3 - Проверка существования в запсторе:
						(select id from package_return pr where return_fid = 54098) => забрать ID-party;
				4- Спрашивать подтверждение/предупреждать если партия в статусе отпарвлена  		

				5 - Получение списка посылок:
						(select id from package p where package_fid in(495471870) 		=> список в StrinG c добалением + ",(,ID-party)", с 1, (кроме 0);

				4 - добавление посылки в партию:		
						 INSERT into public.package_return_item (package_id, package_return_id) 
							values (item [0], ID-party);
//---------------------------------------------------------
4)  Перебронирование по 2 схемам и 2 подсхемам:
		• без изменения вгх
			• откат статусов в ПМ и откат Матери в Null (подходит к переброни со статусами "Отменено", "Доставлено", "Возвращено")
			• Откат статусов когда посылка уже лежит в ПМ по ошибке:
				• через Откат матери к "Новая" в engy, откату статусов в пм и отвязке от ПМ
				• через "Доставлено" в engy и откату статусов в ПМ:
					• открывать страницы с пм и Engy и спрашивать какую ячейку откатывать (референс брать из нашего ПМ), т.к может быть расинхрон - если совпадает, то все ок, если нет то просить ввести ту что в engy. 
		• С ВГХ:
			• все тоже самое, но только с прогонкой новых ВГХ через метод перд бронью, а также 	выводом вгх из пм для проверки
			• напрямую ввидть вгх в ПМ для скорости работы 




!# Расширенные #!
	•  Стили + Тема (два варианта)
	• переключение между режимами окна 
	• всплывающее окно настроек #FF1FA740


	◘	заметки :

string json = @"{
        ""id"":""11111111111111"",
        ""sum"": {
          ""amount"":100,
          ""currency"":""643""
        },
        ""paymentMethod"": {
          ""type"":""Account"",
          ""accountId"":""643""
        },
        ""comment"":""test"",
        ""fields"": {
          ""account"":""+79121112233""
        }
      }'";
 
var httpRequest = (HttpWebRequest)WebRequest.Create("http://httpbin.org/post");
httpRequest.Method = "POST";
httpRequest.ContentType = "application/json";
using (var requestStream = httpRequest.GetRequestStream())
using (var writer = new StreamWriter(requestStream))
{
    writer.Write(json);
}
using (var httpResponse = httpRequest.GetResponse())
using (var responseStream = httpResponse.GetResponseStream())
using (var reader = new StreamReader(responseStream))
{
    string response = reader.ReadToEnd();
}






